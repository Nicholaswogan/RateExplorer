import numpy as np
import utils
import fitting

def get_data():
    # The data

    # in Kelvin
    TCO2_sol = np.array([ 70.        ,  72.36494949,  74.72989899,  77.09484848,
            79.45979798,  81.82474747,  84.18969697,  86.55464646,
            88.91959596,  91.28454545,  93.64949495,  96.01444444,
            98.37939394, 100.74434343, 103.10929293, 105.47424242,
        107.83919192, 110.20414141, 112.56909091, 114.9340404 ,
        117.2989899 , 119.66393939, 122.02888889, 124.39383838,
        126.75878788, 129.12373737, 131.48868687, 133.85363636,
        136.21858586, 138.58353535, 140.94848485, 143.31343434,
        145.67838384, 148.04333333, 150.40828283, 152.77323232,
        155.13818182, 157.50313131, 159.86808081, 162.2330303 ,
        164.5979798 , 166.96292929, 169.32787879, 171.69282828,
        174.05777778, 176.42272727, 178.78767677, 181.15262626,
        183.51757576, 185.88252525, 188.24747475, 190.61242424,
        192.97737374, 195.34232323, 197.70727273, 200.07222222,
        202.43717172, 204.80212121, 207.16707071, 209.5320202 ,
        211.8969697 , 214.26191919, 216.62686869, 218.99181818,
        221.35676768, 223.72171717, 226.08666667, 228.45161616,
        230.81656566, 233.18151515, 235.54646465, 237.91141414,
        240.27636364, 242.64131313, 245.00626263, 247.37121212,
        249.73616162, 252.10111111, 254.46606061, 256.8310101 ,
        259.1959596 , 261.56090909, 263.92585859, 266.29080808,
        268.65575758, 271.02070707, 273.38565657, 275.75060606,
        278.11555556, 280.48050505, 282.84545455, 285.21040404,
        287.57535354, 289.94030303, 292.30525253, 294.67020202,
        297.03515152, 299.40010101, 301.76505051, 304.13      ])

    # saturation vapor pressure of CO2 (dynes/cm^2)
    PCO2_sol = np.array([1.22402553e-07, 5.96677714e-07, 2.61355954e-06, 1.03949454e-05,
        3.78867083e-05, 1.27560437e-04, 3.99561675e-04, 1.17168058e-03,
        3.23448864e-03, 8.44739324e-03, 2.09643544e-02, 4.96368194e-02,
        1.12522175e-01, 2.45007605e-01, 5.13913063e-01, 1.04114529e+00,
        2.04212684e+00, 3.88641151e+00, 7.19070816e+00, 1.29580447e+01,
        2.27810698e+01, 3.91325431e+01, 6.57719037e+01, 1.08303391e+02,
        1.74928448e+02, 2.77442938e+02, 4.32537901e+02, 6.63470984e+02,
        1.00218406e+03, 1.49195065e+03, 2.19064454e+03, 3.17472756e+03,
        4.54406085e+03, 6.42764817e+03, 8.99042340e+03, 1.24411960e+04,
        1.70418678e+04, 2.31180343e+04, 3.10710766e+04, 4.13918494e+04,
        5.46760587e+04, 7.16414170e+04, 9.31466514e+04, 1.20212429e+05,
        1.54044251e+05, 1.96057349e+05, 2.47903611e+05, 3.11500530e+05,
        3.89062184e+05, 4.83132199e+05, 5.96618661e+05, 7.32830920e+05,
        8.95518205e+05, 1.08890995e+06, 1.31775777e+06, 1.58737886e+06,
        1.90370087e+06, 2.27330787e+06, 2.70348751e+06, 3.20227905e+06,
        3.77852204e+06, 4.44190575e+06, 5.19511691e+06, 5.74873886e+06,
        6.34597943e+06, 6.98892271e+06, 7.67967365e+06, 8.42035748e+06,
        9.21311977e+06, 1.00601271e+07, 1.09635681e+07, 1.19256560e+07,
        1.29486307e+07, 1.40347623e+07, 1.51863556e+07, 1.64057547e+07,
        1.76953487e+07, 1.90575786e+07, 2.04949443e+07, 2.20100132e+07,
        2.36054289e+07, 2.52839218e+07, 2.70483193e+07, 2.89015584e+07,
        3.08466981e+07, 3.28869338e+07, 3.50256115e+07, 3.72662445e+07,
        3.96125305e+07, 4.20683698e+07, 4.46378852e+07, 4.73254430e+07,
        5.01356757e+07, 5.30735060e+07, 5.61441724e+07, 5.93532572e+07,
        6.27067157e+07, 6.62109079e+07, 6.98726323e+07, 7.36991628e+07])
    
    return TCO2_sol, PCO2_sol

def main():
    mu_CO2 = 44.01
    T_triple = 216.58
    T_critical = 304.13
    T_ref = 250.0 # K
    P_ref = 17843676.678142548 # dynes/cm^2

    h = utils.SaturationPropertiesFitter(mu_CO2, T_triple, T_critical, T_ref, P_ref)
    T_data, P_data = get_data()
    guess = [4e9, 0, 6e9, 0]
    sol = h.optimize(guess, T_data, P_data)

    h.to_file('results/CO2_sat.yaml')

    gas_g = 'CO2'
    fitting.plot_sat(h, gas_g, T_data, P_data)
    fitting.fit_thermo(gas_g, 150, 1000)

if __name__ == '__main__':
    main()